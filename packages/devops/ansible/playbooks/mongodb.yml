---
- name: "Install pymongo"
  hosts: databases
  become: true
  tasks:
    - name: Install or update pip
      apt:
        pkg: python-pip
        state: present
    - pip:
        name: pymongo

- name: "Install mongodb"
  hosts: databases
  collections:
    - community.mongodb
  roles:
    - mongodb_repository
    - mongodb_install
    - mongodb_mongod
  become: true
  vars:
    mongodb_version: "4.4"
    openssl_keyfile_content: "{{ lookup('env', 'MONGODB_KEYFILE_CONTENTS') }}"
    repl_set_name: "bgs"
    skip_restart: false
    bind_ip: ::,0.0.0.0
    # db_path: /dev/dbs/mongodb

- name: "Ensure replicaset bgs exists"
  hosts: databases[0]
  collections:
    - community.mongodb
  tasks:
    - name: "Try with no login"
      mongodb_replicaset:
        replica_set: bgs
        login_host: localhost
        members:
          - host: db01.boardgamers.space:27017
            priority: 1
          - host: db02.boardgamers.space:27017
            priority: 1
          - host: db03.boardgamers.space:27017
            hidden: true
            priority: 0
      register: repl
    - name: Ensure replicaset has reached a converged state
      mongodb_status:
        replica_set: bgs
        poll: 10
        interval: 10
      when: repl.changed == True

- name: "Create admin and users"
  hosts: databases[0]
  collections:
    - community.mongodb
  roles:
    - mongodb_auth
  become: true
  vars:
    mongodb_admin_user: "{{ lookup('env', 'MONGODB_ADMIN_USER') }}"
    mongodb_admin_pwd: "{{ lookup('env', 'MONGODB_ADMIN_PASSWORD') }}"
    mongodb_users:
      - db: admin
        user: site
        pwd: "{{ lookup('env', 'MONGODB_SITE_PASSWORD') }}"
        roles:
          - { db: bgs, role: readWrite }
        state: present
      - db: admin
        user: game-server
        pwd: "{{ lookup('env', 'MONGODB_GAMESERVER_PASSWORD') }}"
        # Todo: finetune collections access as seen in gameserver's readme
        roles:
          - { db: bgs, role: readWrite }
        state: present
      - db: admin
        user: nodebb
        pwd: "{{ lookup('env', 'MONGODB_NODEBB_PASSWORD') }}"
        roles:
          - { db: nodebb, role: readWrite }
        state: present
